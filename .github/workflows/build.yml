# .github/workflows/build.yml
name: Build and Dockerize Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project:
          - ProductService
          - UserService
          - OrderService
          - InventoryService
          - NotificationService

    steps:
      # 1) Checkout your code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Install .NET 8 SDK
      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # 3) Restore & build (ignore nullable warnings-as-errors)
      - name: Restore & Build
        run: |
          dotnet restore src/${{ matrix.project }}/${{ matrix.project }}.API/${{ matrix.project }}.API.csproj
          dotnet build   src/${{ matrix.project }}/${{ matrix.project }}.API/${{ matrix.project }}.API.csproj \
            --configuration Release \
            -p:TreatWarningsAsErrors=false

      # 4) Login to GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5) Compute lowercase image name
      - name: Set IMAGE_NAME env var
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          NAME=$(echo "${{ matrix.project }}"        | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=ghcr.io/${OWNER}/${NAME}:latest" >> $GITHUB_ENV

      # 6) Build & push Docker image
      - name: Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: src/${{ matrix.project }}/${{ matrix.project }}.API
          file:    src/${{ matrix.project }}/${{ matrix.project }}.API/Dockerfile
          push:    true
          tags:    ${{ env.IMAGE_NAME }}
